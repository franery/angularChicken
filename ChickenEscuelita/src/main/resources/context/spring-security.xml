<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/jee
          http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">
	
	<security:http pattern="/inicio" security="none"/>
	
	<security:http>
		<security:intercept-url pattern="/**" access="hasRole('0')" />
<!-- <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMINISTRADOR')" />  -->
		
		<security:form-login login-page="/inicio"
	authentication-failure-url="/login?error" default-target-url="/ingresar"
	username-parameter="username" password-parameter="password" />
		
		<security:csrf disabled="true"/>
	</security:http>
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" role-prefix="" 
				users-by-username-query="SELECT nombreUsuario as username, contrasenia as password, true as enabled FROM Usuario WHERE nombreUsuario=?"
				authorities-by-username-query="SELECT nombreUsuario as username, perfil as authority FROM Usuario WHERE nombreUsuario=?"/>
<!-- 				<security:jdbc-user-service data-source-ref="dataSource"/> -->
<!-- 		<jdbc-user-service data-source-ref="dataSource" -->
<!-- 		  users-by-username-query= -->
<!-- 		    "select username,password, enabled from users where username=?" -->
<!-- 		  authorities-by-username-query= -->
<!-- 		    "select username, role from user_roles where username =?  " /> -->
		</security:authentication-provider>
	</security:authentication-manager>
	
<!-- 	<bean id="miUserServiceJDBC" -->
<!-- 		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="usersByUsernameQuery"> -->
<!-- 			<value> -->
<!-- 			SELECT nombreUsuario as username, contrasenia as password, true as enabled FROM Usuario WHERE username=? -->
<!--              </value> -->
<!--              </property> -->
<!-- 		<property name="authoritiesByUsernameQuery" -->
<!-- 			value="SELECT nombreUsuario as username, perfil as authority FROM Usuario WHERE username=?" /> -->
<!-- 	</bean> -->

<!-- 	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/securityDS" resource-ref="true" /> -->
</beans>